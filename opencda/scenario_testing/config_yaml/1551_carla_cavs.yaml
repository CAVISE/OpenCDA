description: |-
  Copyright 2021 <UCLA Mobility Lab>
  Author: Runsheng Xu <rxx3386@ucla.edu>
  Content: This is the scenario testing configuration file for single vehicle full-stack system in town06 with co-simulation

world:
  town: Town06

blueprint:
  use_multi_class_bp: true
  bp_meta_path: "opencda/assets/blueprint_meta/bbx_stats_0915.json" # Define the path for loading the blueprint metadata for defining the class of each blueprint
  # Define blueprint type sample probabilities
  bp_class_sample_prob:
    car: 0.5
    truck: 0.1
    bus: 0.1
    bicycle: 0.1
    motorcycle: 0.1

rsu_base:
  sensing:
    perception:
      activate: false # when not activated, objects positions will be retrieved from server directly
      camera:
        visualize: 0 # how many camera images need to be visualized. 0 means no visualization for camera
        num: 0 # how many cameras are mounted on the vehicle. Maximum 3(frontal, left and right cameras)
        # relative positions (x,y,z,yaw) of the camera. len(positions) should be equal to camera num
      lidar: # lidar sensor configuration, check CARLA sensor reference for more details
        visualize: false
        channels: 32
        range: 120
        points_per_second: 1000000
        rotation_frequency: 20 # the simulation is 20 fps
        upper_fov: 2
        lower_fov: -25
        dropoff_general_rate: 0.3
        dropoff_intensity_limit: 0.7
        dropoff_zero_intensity: 0.4
        noise_stddev: 0.02
    localization:
      activate: false # when not activated, ego position will be retrieved from server directly
      dt: ${world.fixed_delta_seconds} # used for kalman filter
      gnss: # gnss sensor configuration
        noise_alt_stddev: 0.05
        noise_lat_stddev: 3e-6
        noise_lon_stddev: 3e-6


# First define the basic parameters of the vehicles
vehicle_base:
  sensing:
    perception:
      activate: false # when not activated, objects positions will be retrieved from server directly
      camera:
        visualize: 0 # how many camera images need to be visualized. 0 means no visualization for camera
        num: 1 # how many cameras are mounted on the vehicle. Maximum 3(frontal, left and right cameras)
        positions:
          - [2.5, 0, 1.0, 0]
        # relative positions (x,y,z,yaw) of the camera. len(positions) should be equal to camera num
      lidar: # lidar sensor configuration, check CARLA sensor reference for more details
        visualize: false
        channels: 32
        range: 120
        points_per_second: 1000000
        rotation_frequency: 20 # the simulation is 20 fps
        upper_fov: 2
        lower_fov: -25
        dropoff_general_rate: 0.3
        dropoff_intensity_limit: 0.7
        dropoff_zero_intensity: 0.4
        noise_stddev: 0.02

    localization:
      activate: false # when not activated, ego position will be retrieved from server directly
      debug_helper:
        show_animation: false # whether to show real-time trajectory plotting

  behavior:
    max_speed: 60 # maximum speed, km/h
    tailgate_speed: 60 # when a vehicles needs to be close to another vehicle asap
    speed_lim_dist: 3 # max_speed - speed_lim_dist = target speed
    speed_decrease: 15 # used in car following mode to decrease speed for distance keeping
    safety_time: 4 # ttc safety thresholding for decreasing speed
    emergency_param: 0.4 # used to identify whether a emergency stop needed
    ignore_traffic_light: false # whether to ignore traffic light
    overtake_allowed: false # whether overtake allowed, typically false for platoon leader
    collision_time_ahead: 2.0 # used for collision checking
    overtake_counter_recover: 35 # the vehicle can not do another overtake during next certain steps
    sample_resolution: 4.5 # the unit distance between two adjacent waypoints in meter
    local_planner:  # trajectory planning related
      buffer_size: 12 # waypoint buffer size
      trajectory_update_freq: 15 # used to control trajectory points updating frequency
      waypoint_update_freq: 9 # used to control waypoint updating frequency
      min_dist: 3 # used to pop out the waypoints too close to current location
      trajectory_dt: 0.20 # for every dt seconds, we sample a trajectory point from the trajectory path as next goal state
      debug: false # whether to draw future/history waypoints
      debug_trajectory: false # whether to draw the trajectory points and path

# define sumo simulation setting for traffic generation
sumo:
  port: 3000
  host: sumo
  gui: true
  client_order: 1
  step_length: ${world.fixed_delta_seconds}



scenario:
  rsu_list:
  single_cav_list:
    - name: cav1
      spawn_position: [20, 149.792206, 0.3, 0, 0, 0]
      destination: [170, 149.792206, 0.3]
      id: 1
    - name: cav2
      spawn_position: [20, 142.791870, 0.3, 0, 0, 0]
      destination: [170, 142.791870, 0.3]
      id: 2
    - name: cav3
      spawn_position: [20, 135.792358, 0.3, 0, 0, 0]
      destination: [170, 135.792358, 0.3]
      id: 3

    - name: cav4
      spawn_position: [35, 149.792206, 0.3, 0, 0, 0]
      destination: [185, 149.792206, 0.3]
      id: 4
    - name: cav5
      spawn_position: [35, 142.791870, 0.3, 0, 0, 0]
      destination: [185, 142.791870, 0.3]
      id: 5
    - name: cav6
      spawn_position: [35, 135.792358, 0.3, 0, 0, 0]
      destination: [185, 135.792358, 0.3]
      id: 6

    - name: cav7
      spawn_position: [50, 149.792206, 0.3, 0, 0, 0]
      destination: [200, 149.792206, 0.3]
      id: 7
    - name: cav8
      spawn_position: [50, 142.791870, 0.3, 0, 0, 0]
      destination: [200, 142.791870, 0.3]
      id: 8
    - name: cav9
      spawn_position: [50, 135.792358, 0.3, 0, 0, 0]
      destination: [200, 135.792358, 0.3]
      id: 9
